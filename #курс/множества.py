# похоже на список
set()
my_set = set([1, 1, 2, 2, 3, 3, 4, 5, 6, 7, 7, 8, 99])
my_set
Out[31]: {1, 2, 3, 4, 5, 6, 7, 8, 99} # только уникальные объекты

other_set={4,4,5,5,6,6,8,8,9,9,10,11,1,2,3,4}
other_set
Out[34]: {1, 2, 3, 4, 5, 6, 8, 9, 10, 11}
other_set | my_set # объединение двух множеств
Out[35]: {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99}

other_set & my_set # пересечение двух множеств
Out[36]: {1, 2, 3, 4, 5, 6, 8}

other_set - my_set # вычитание двух множеств из other_set вычитаем my_set, можно наоборот
Out[40]: {9, 10, 11}

77 in other_set, my_set # вхождение во множество
Out[42]: (False, {1, 2, 3, 4, 5, 6, 7, 8, 99})
99 in my_set, other_set
Out[43]: (True, {1, 2, 3, 4, 5, 6, 8, 9, 10, 11})

my_set == other_set # сравнение
Out[44]: False

my_set.add(777)#добавляет элемент
Out[46]: {1, 2, 3, 4, 5, 6, 7, 8, 99, 777}

other_set
Out[47]: {1, 2, 3, 4, 5, 6, 8, 9, 10, 11}
other_set.pop()# удаляет первый элемент
Out[54]: {2, 3, 4, 5, 6, 8, 9, 10, 11}
other_set.discard(8)#удаляет указанный элемент
other_set
Out[58]: {3, 4, 5, 6, 9, 10, 11}

set.update(other_set, my_set)#
other_set
Out[66]: {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99, 777}
my_set
Out[67]: {1, 2, 3, 4, 5, 6, 7, 8, 99, 777}


С множествами можно выполнять множество операций: находить объединение, пересечение...

len(s) - число элементов в множестве (размер множества).
x in s - принадлежит ли x множеству s.
set.isdisjoint(other) - истина, если set и other не имеют общих элементов.
set == other - все элементы set принадлежат other, все элементы other принадлежат set.
set.issubset(other) или set <= other - все элементы set принадлежат other.
set.issuperset(other) или set >= other - аналогично.
set.union(other, ...) или set | other | ... - объединение нескольких множеств.
set.intersection(other, ...) или set & other & ... - пересечение.
set.difference(other, ...) или set - other - ... - множество из всех элементов set, не принадлежащие ни одному из other.
set.symmetric_difference(other); set ^ other - множество из элементов, встречающихся в одном множестве, но не встречающиеся в обоих.
set.copy() - копия множества.
И операции, непосредственно изменяющие множество:

set.update(other, ...); set |= other | ... - объединение.
set.intersection_update(other, ...); set &= other & ... - пересечение.
set.difference_update(other, ...); set -= other | ... - вычитание.
set.symmetric_difference_update(other); set ^= other - множество из элементов, встречающихся в одном множестве, но не встречающиеся в обоих.
set.add(elem) - добавляет элемент в множество.
set.remove(elem) - удаляет элемент из множества. KeyError, если такого элемента не существует.
set.discard(elem) - удаляет элемент, если он находится в множестве.
set.pop() - удаляет первый элемент из множества. Так как множества не упорядочены, нельзя точно сказать, какой элемент будет первым.
set.clear() - очистка множества.















